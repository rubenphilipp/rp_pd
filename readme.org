# -*- eval: (flyspell-mode); eval: (ispell-change-dictionary "en") -*-
#+CATEGORY: pd
#+title: rp_pd
#+author: Ruben Philipp
#+date: 2025-04-01
#+LANGUAGE: en
#+startup: overview

#+begin_comment
$$ Last modified:  23:08:52 Sat Apr 12 2025 CEST
#+end_comment

This is a collection of some [[https://github.com/pure-data/pure-data][Pure Data]] externals written by Ruben Philipp.

** Usage

It is necessary to include the externals and pdlua in the following order:

#+begin_src pd
[declare -lib pdlua -path rp_pd]
#+end_src

** Requirements

- [[https://github.com/pure-data/pure-data][Pure Data]]
- [[https://github.com/agraef/pd-lua][pd-lua]]
- [[https://github.com/porres/pd-else][pd-else]]


* Objects

** [matrixctrl]

#+ATTR_HTML: :width 300px
[[file:./doc/matrixctrl.svg]]

This is a Pd version of MaxMSP's ~[matrixctrl]~ object written in [[https://github.com/agraef/pd-lua][pd-lua]].


** [input-strip]

[[file:./doc/input-strip_new.png]]

A channel strip for mono audio-input. 

** [midi-controller]

[[file:./doc/midi-controller.png]]

An abstraction for midi controller devices. 

** [midi-keyboard]

An abstraction for midi keyboard devices. 

** [statepattr]

[[file:./doc/statepattr.png]]

This is a helper to store the data of an object with a ~[savestate]~ object.

** [presetsctrl]

[[file:./doc/presetsctrl.png]]

This is a GUI for the ~[else/presets]~ object similar to MaxMSP's preset object
but without actual storing facilities. It works similar to the ~[preset]~ object
in this library but is meant to control an ~[else/presets]~ object.

** [preset]

[[file:./doc/preset.png]]

This object stores the data of a connected object in various slots. The data
must be communicated in the form of lists of the form:

~[value-name value-1 .. value-n]~.

*NB:* It is recommended to use the ~[else/presets]~ object in conjunction with
the ~[presetsctrl]~ object in this library instead of ~[preset]~ for greater
flexibility.  For simpler projects though this object might still be of
interest.


